common --experimental_allow_tags_propagation
build --incompatible_strict_action_env # use an environment with a static value for PATH and do not inherit LD_LIBRARY_PATH

# default to optimized and stripped binaries. These greatly optimized rust test runtimes.
build --compilation_mode=opt
build --@rules_rust//:extra_rustc_flag=-Cdebug-assertions=on
build --strip=never

build --strategy_regexp=ic-os/.*=local

build:ci --remote_cache=buildfarm.zh1-idx1.dfinity.network # TODO: set as default when the infrastructure will be reliably accessible from development machines
build --experimental_remote_cache_async
build --incompatible_remote_build_event_upload_respect_no_cache
build --noremote_upload_local_results # Whether to upload locally executed action results to the remote cache.

build --execution_log_json_file=bazel-build-log.json

build --bes_results_url=https://dash.buildfarm.dfinity.systems/invocation/
build:ci --bes_backend=bes.buildfarm.dfinity.systems # TODO: set as default when the infrastructure will be reliably accessible from development machines

build --remote_local_fallback
build --workspace_status_command=$(pwd)/bazel/workspace_status.sh

build --cxxopt='-std=c++17'

build --aspects=@rules_rust//rust:defs.bzl%rust_clippy_aspect
build --output_groups=+clippy_checks
build --@rules_rust//:clippy.toml=//:clippy.toml --@rules_rust//:clippy_flags=-D,warnings,-D,clippy::all,-A,clippy::redundant_closure,-C,debug-assertions=off

build --aspects=@rules_rust//rust:defs.bzl%rustfmt_aspect
build --output_groups=+rustfmt_checks
build --@rules_rust//:rustfmt.toml=//:rustfmt.toml

build --@rules_rust//:source_path_prefix=/source/

# Exclude system tests by default
# https://github.com/bazelbuild/bazel/issues/8439
build --build_tag_filters="-system_test"
test --test_tag_filters="-system_test,-post_master"
test:alltests --test_tag_filters=""

test --test_output=errors
test --test_env=RUST_BACKTRACE=full

# TODO(IDX-2374): enable alltests in CI when we will have actual system tests.
#test:ci --config=alltests

build:ci --noremote_local_fallback
build:ci --remote_upload_local_results # Whether to upload locally executed action results to the remote cache.

# So that developers can build in debug mode.
build:dev --compilation_mode=fastbuild

# Run `bazel build ... --config=local` if you don't have access to the buildfarm infrastructure.
build:local --remote_cache=
build:local --bes_backend=
