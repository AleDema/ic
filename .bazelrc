build:ci --config=lint
build:lint --config=fmt
build:lint --config=clippy

# rust-clippy
build:clippy --aspects=@rules_rust//rust:defs.bzl%rust_clippy_aspect
build:clippy --output_groups=+clippy_checks
build --@rules_rust//:clippy.toml=//:clippy.toml --@rules_rust//:clippy_flags=-D,warnings,-D,clippy::all,-D,clippy::mem_forget,-C,debug-assertions=off
# rustfmt
build:fmt --aspects=@rules_rust//rust:defs.bzl%rustfmt_aspect
build:fmt --output_groups=+rustfmt_checks
build --@rules_rust//:rustfmt.toml=//:rustfmt.toml

# Use hermetic JDK
# See https://bazel.build/docs/bazel-and-java#hermetic-testing
build --java_runtime_version=remotejdk_17

common --experimental_allow_tags_propagation
build --nosandbox_default_allow_network
build --incompatible_strict_action_env # use an environment with a static value for PATH and do not inherit LD_LIBRARY_PATH

# default to optimized and unstripped binaries.
build --compilation_mode=opt
build --@rules_rust//:extra_rustc_flags=-Cdebug-assertions=on
build --@rules_rust//:extra_rustc_flag=-Dbindings_with_variant_name
build --strip=never

build --workspace_status_command=$(pwd)/bazel/workspace_status.sh

build --experimental_repository_downloader_retries=3 # https://bazel.build/reference/command-line-reference#flag--experimental_repository_downloader_retries

build --flag_alias=ic_version=//bazel:ic_version
build --flag_alias=ic_version_rc_only=//bazel:ic_version_rc_only
build --flag_alias=s3_endpoint=//gitlab-ci/src/artifacts:s3_endpoint
build --flag_alias=s3_upload=//gitlab-ci/src/artifacts:s3_upload
build --flag_alias=k8s=//rs/tests:k8s
build --flag_alias=timeout_value=//bazel:timeout_value

# Exclude system tests by default
# https://github.com/bazelbuild/bazel/issues/8439
build --build_tag_filters="-system_test,-upload,-fuzz_test"
test --test_tag_filters="-system_test,-post_master,-fuzz_test"
test --test_output=errors
test --test_env=RUST_BACKTRACE=full


# For sandboxed actions, mount an empty, writable directory at this absolute path
# (if supported by the sandboxing implementation, ignored otherwise).
test --sandbox_tmpfs_path=/tmp


# So that developers can build in debug mode.
build:macos_ci --compilation_mode=fastbuild
build:macos_ci --build_tag_filters="-system_test,-fuzz_test"
