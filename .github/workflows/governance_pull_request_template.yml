name: Governance Team Pull Request Template

on:
  pull_request:
    types:
      - opened
      # DO NOT MERGE
      - synchronize

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Main Step
        uses: actions/github-script@v6
        id: main
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          retries: 3
          script: |
            console.log("BEGIN SCRIPT");

            const oldBody = context.payload.pull_request.body;
            var newBody = "GARBAGE";
            if (!oldBody) {
              newBody = "WAS BLANK";
            } else {
              newBody = oldBody + "\n\n# Additional Stuff";
            }
            console.log("newBody = " + JSON.stringify(newBody));

            console.log("\n\n");
            console.log("Calling listMembersInOrg...")
            console.log("\n\n");
            const nnsTeamMembers = await github.request('GET /orgs/{org}/teams/{team_slug}/members', {
              org: "dfinity",
              team_slug: "nns-team",
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            console.log("\n\n");
            console.log("nnsTeamMemebrs = " + nnsTeamMembers);
            console.log("\n\n");

            const isInNnsTeam = nnsTeamMembers.data.some(member => member.login == context.actor);
            console.log("Is actor in nns-team? " + isInNNsTeam);
            if (!isInNnsTeam) {
              return;
            }

            const pullRequestNumber = context.payload.number;
            console.log("Setting the body of pull request number " + pullRequestNumber + "...");
            await github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullRequestNumber,
              body: newBody,
            });
