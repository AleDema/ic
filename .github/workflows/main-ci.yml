name: Main CI

on:
  # Todo: re-enable once github runner resources have been set
  # push:
  merge_group:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

# runs for the same workflow are cancelled on PRs but not on master
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

env:
  CI_COMMIT_SHA: ${{ github.sha }}
  CI_COMMIT_REF_PROTECTED: ${{ github.ref_protected }}
  CI_JOB_NAME: ${{ github.job }}
  CI_JOB_ID: ${{ github.job }} # github does not expose this variable https://github.com/orgs/community/discussions/8945
  CI_JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  ROOT_PIPELINE_ID: ${{ github.run_id }}
  BAZEL_STARTUP_ARGS: "--output_base=/var/tmp/bazel-output/"
  RUSTFLAGS: "--remap-path-prefix=${CI_PROJECT_DIR}=/ic"
  AWS_SHARED_CREDENTIALS_CONTENT: ${{ secrets.AWS_SHARED_CREDENTIALS_FILE }}

jobs:
  bazel-test-all:
    name: Bazel-Test-All
    runs-on:
      labels: bazel-runner-large
    timeout-minutes: 90
    container:
      image: dfinity/ic-build:e52dca0c4a9aa4f7b3ade309815b9f19995c78b4042d3578d2f824e10a0fdff1
    if: ${{ vars.RUN_CI == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Bazel Test All
        id: bazel-test-all
        run: ${GITHUB_WORKSPACE}/gitlab-ci/src/bazel-ci/main.sh
        env:
          BAZEL_COMMAND: "test"
          BAZEL_TARGETS: "//... --deleted_packages=gitlab-ci/src/gitlab_config"
          BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
          BAZEL_EXTRA_ARGS: "--keep_going --timeout_value=15m --verbose"
      - name: After script
        run: |
          bazel clean
          gzip bazel-build-log*.json
      - name: Upload Bazel artifacts
        uses: actions/upload-artifact@v3
        if: success() || failure() # don't run if CI job is cancelled
        with:
          name: bazel-artifacts
          retention-days: 2
          path: |
            bazel-build-log*.json*
            bazel-bep.pb
            bazel-testlogs/**/test.xml


  bazel-build-fuzzers:
    name: Bazel-Build-Fuzzers
    runs-on:
      labels: bazel-runner-small
    container:
      image: dfinity/ic-build:e52dca0c4a9aa4f7b3ade309815b9f19995c78b4042d3578d2f824e10a0fdff1
    if: ${{ vars.RUN_CI == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Bazel Build Fuzzers
        id: bazel-build-fuzzers
        run: ${GITHUB_WORKSPACE}/gitlab-ci/src/bazel-ci/main.sh
        env:
          BAZEL_COMMAND: "build"
          BAZEL_TARGETS: "//rs/..."
          BAZEL_CI_CONFIG: "--config=ci"
          BAZEL_EXTRA_ARGS: "--keep_going --config=fuzzing --build_tag_filters=libfuzzer"


  bazel-build-fuzzers-afl:
    name: Bazel-Build-Fuzzers-AFL
    runs-on:
      labels: bazel-runner-small
    container:
      image: dfinity/ic-build:e52dca0c4a9aa4f7b3ade309815b9f19995c78b4042d3578d2f824e10a0fdff1
    if: ${{ vars.RUN_CI == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Bazel Build Fuzzers AFL
        id: bazel-build-fuzzers-afl
        run: ${GITHUB_WORKSPACE}/gitlab-ci/src/bazel-ci/main.sh
        env:
          BAZEL_COMMAND: "build"
          BAZEL_TARGETS: "//rs/..."
          BAZEL_CI_CONFIG: "--config=ci"
          BAZEL_EXTRA_ARGS: "--keep_going --config=afl"


  bazel-build-fuzzers-archives:
    name: Bazel-Build-Fuzzers-Archives
    runs-on:
      labels: bazel-runner-small
    container:
      image: dfinity/ic-build:e52dca0c4a9aa4f7b3ade309815b9f19995c78b4042d3578d2f824e10a0fdff1
    if: ${{ vars.RUN_CI == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            fuzzers:
              - '.github/workflows/main-ci.yml'
              - 'bin/build-all-fuzzers.sh'
              - 'bazel/fuzz_testing.bzl'
      - name: Run Bazel Build Fuzzers Archives
        id: bazel-build-fuzzers-archives
        if: steps.filter.outputs.fuzzers == 'true'
        shell: bash
        run: |
          set -euo pipefail
          cd "${GITHUB_WORKSPACE}"/bin
          ./build-all-fuzzers.sh --zip
      - name: No run
        if: steps.filter.outputs.fuzzers == 'false'
        run: echo "No changes in fuzzers, skipping build"
