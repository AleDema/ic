# This is just a temporarily location for testing; when merged, this should be renamed
# and perhapsed merged into some other file

name: Fixture generation and upload
on:
  pull_request: 

jobs:
  upload-fixtures:
    name: Upload fixtures
    runs-on: 
      labels: dind-large
    container:
      image: ghcr.io/dfinity/ic-build@sha256:26cc347efa50935342742acddfb5d710fae1982d401911013ad8750f0603c590
    env:
      CI_COMMIT_SHA: ${{ github.sha }}
      CI_COMMIT_REF_PROTECTED: ${{ github.ref_protected }}
      CI_JOB_NAME: ${{ github.job }}
      CI_JOB_ID: ${{ github.job }} # github does not expose this variable https://github.com/orgs/community/discussions/8945
      CI_JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      CI_PIPELINE_SOURCE: ${{ github.event_name }}
      CI_PROJECT_DIR: ${{ github.workspace }}
      CI_MERGE_REQUEST_TARGET_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
      ROOT_PIPELINE_ID: ${{ github.run_id }}
      BAZEL_STARTUP_ARGS: "--output_base=/var/tmp/bazel-output/"
      RUSTFLAGS: "--remap-path-prefix=${CI_PROJECT_DIR}=/ic"
      AWS_SHARED_CREDENTIALS_CONTENT: ${{ secrets.AWS_SHARED_CREDENTIALS_FILE }}
      DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
      DOCKER_HUB_PASSWORD_RO: ${{ secrets.DOCKER_HUB_PASSWORD_RO }}
      CI_MERGE_REQUEST_TITLE: ${{ github.event.pull_request.title }}
      BUILDEVENT_APIKEY: ${{ secrets.HONEYCOMB_API_TOKEN }}
      BUILDEVENT_DATASET: "github-ci-dfinity"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Before script
        id: before-script
        shell: bash
        run: ./gitlab-ci/src/ci-scripts/before-script.sh
      - name: Set BAZEL_EXTRA_ARGS_RULES
        shell: bash
        run: |
          set -xeuo pipefail
          if [[ "${{ github.event_name }}" == 'merge_group' ]]; then
            echo "BAZEL_EXTRA_ARGS_RULES=--test_timeout_filters=short,moderate --flaky_test_attempts=3" >> $GITHUB_ENV
          fi
          if [[ $BRANCH_NAME =~ hotfix-.*-rc--.* ]]; then
            echo "BAZEL_EXTRA_ARGS_RULES=--test_timeout_filters=short,moderate" >> $GITHUB_ENV
          fi
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      - name: Generate and upload fixtures
        uses: ./.github/actions/bazel-test-all/
        with:
          BAZEL_COMMAND: "build"
          BAZEL_TARGETS: "//publish/fixtures:upload_fixtures"
          BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
          RUN_ON_DIFF_ONLY: 'false'
          HONEYCOMB_API_TOKEN: ${{ secrets.HONEYCOMB_API_TOKEN }}
      - name: Commit the new fixtures
        shell: bash
        run: |
          set -x
          find . -name release_fixtures.bzl
          tree -a
          cp bazel-bin/release_fixtures.bzl release_fixtures.bzl
          git add release_fixtures.bzl
          git commit -m "Release CI: Update release fixtures"
      - name: Open a PR with the new fixtures
        # TODO: check that this is allowed by the repo settings;
        # see https://github.com/marketplace/actions/create-pull-request#workflow-permissions
        uses: peter-evans/create-pull-request@v6
        with:
          # Do we need to do auth here?
          # token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update release fixtures
          title: Update release fixtures
          body: |
            This PR updates the release fixtures.
          branch: update-release-fixtures
          base: master
