load("//bazel:transitions.bzl", "malicious_binary", "opt_debug_binary")
load("//gitlab-ci/src/artifacts:collect.bzl", "collect_artifacts")
load("//gitlab-ci/src/artifacts:upload.bzl", "upload_artifacts")

package(default_visibility = ["//visibility:public"])

exports_files([
    ".rclone.conf",
    ".rclone-anon.conf",
    "clippy.toml",
    "rustfmt.toml",
    "WORKSPACE.bazel",
])

alias(
    name = "buildifier",
    actual = "//bazel:buildifier",
)

test_suite(
    name = "precommit",
    tests = ["//bazel:buildifier_test"],
)

alias(
    name = "bazelifier",
    actual = "//rs/bazelifier",
)

alias(
    name = "rustfmt",
    actual = "@rules_rust//:rustfmt",
)

BINARIES = {
    "boundary-node-control-plane": "//rs/boundary_node/control_plane:boundary-node-control-plane",
    "boundary-node-prober": "//rs/boundary_node/prober:boundary-node-prober",
    "canister_sandbox": "//rs/canister_sandbox",
    "denylist-updater": "//rs/boundary_node/denylist_updater:denylist-updater",
    "e2e-test-driver": "//rs/scenario_tests:e2e-test-driver",
    "ic-admin": "//rs/registry/admin:ic-admin",
    "ic-balance-exporter": "//rs/boundary_node/ic_balance_exporter:ic-balance-exporter",
    "ic-btc-adapter": "//rs/bitcoin/adapter:ic-btc-adapter",
    "ic-canister-http-adapter": "//rs/canister_http/adapter:ic-canister-http-adapter",
    "ic-consensus-pool-util": "//rs/artifact_pool:ic-consensus-pool-util",
    "ic-crypto-csp": "//rs/crypto:ic-crypto-csp",
    "ic-nns-init": "//rs/nns/init:ic-nns-init",
    "ic-p8s-sd": "//rs/ic_p8s_service_discovery:ic-p8s-sd",
    "ic-p8s-service-discovery": "//rs/ic_p8s_service_discovery:ic-p8s-service-discovery",
    "ic-prep": "//rs/prep:ic-prep",
    "ic-recovery": "//rs/recovery:ic-recovery",
    "ic-regedit": "//rs/registry/regedit:ic-regedit",
    "ic-registry-replicator": "//rs/orchestrator/registry_replicator:ic-registry-replicator",
    "ic-replay": "//rs/replay:ic-replay",
    "ic-rosetta-api": "//rs/rosetta-api:ic-rosetta-api",
    "ic-workload-generator": "//rs/workload_generator:ic-workload-generator",
    "icx-proxy": "//rs/boundary_node/icx_proxy:icx-proxy",
    "orchestrator": "//rs/orchestrator",
    "prod-test-driver": "//rs/tests:prod-test-driver",
    "replica": "//rs/replica",
    "sandbox_launcher": "//rs/canister_sandbox/sandbox_launcher",
    "sns": "//rs/sns/cli:sns",
    "state-tool": "//rs/state_tool:state-tool",
    "system-tests": "//rs/tests:system-tests",
    "vsock_agent": "//rs/guestos_vsock_agent:vsock_agent",
}

malicious_binary(
    name = "malicious_replica",
    binary = "//rs/replica",
)

[opt_debug_binary(
    name = name,
    binary = BINARIES[name],
) for name in BINARIES]

filegroup(
    name = "binaries",
    srcs = [name for name in BINARIES],
)

filegroup(
    name = "sdk",
    srcs = [
        "//rs/bitcoin/adapter:ic-btc-adapter",
        "//rs/canister_http/adapter:ic-canister-http-adapter",
        "//rs/canister_sandbox",
        "//rs/canister_sandbox/sandbox_launcher",
        "//rs/replica",
        "//rs/starter:ic-starter",
    ],
)

collect_artifacts(
    name = "collect_sdk",
    srcs = [":sdk"],
)

upload_artifacts(
    name = "upload_sdk",
    inputs = [":collect_sdk"],
    # The actual list is on https://github.com/bazelbuild/platforms
    remote_subdir = "sdk-release-bazel/" + select({
        "@platforms//cpu:x86_64": "x86_64",
        "@platforms//cpu:arm64": "arm64",
        "//conditions:default": "unknown",
    }) + "-" + select({
        "@platforms//os:osx": "macos",
        "@platforms//os:linux": "linux",
        "//conditions:default": "unknown",
    }),
)
