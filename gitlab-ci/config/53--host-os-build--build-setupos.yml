setup-os-diskimg:
  needs:
    - job: wait-for-bazel-test-all
      artifacts: false
    - job: host-os-diskimg
      artifacts: false
  extends:
    - .ubuntu-docker-k8s-protected
    - .rules-parent-pipeline-autorun-on-trigger
  stage: host-os-build
  variables:
      BUILD_EXTRA_ARGS: ""
      BUILD_EXTRA_SUFFIX: ""
      POLLUTE_PERMISSIONS: ""
  script:
    - |
      set -xeuo pipefail
      BUILD_OUT="build-out/disk-img${BUILD_EXTRA_SUFFIX}"
      BUILD_TMP="build-tmp${BUILD_EXTRA_SUFFIX}"
      UPLOAD_TARGET="setup-os/disk-img${BUILD_EXTRA_SUFFIX}"
      VERSION=$(git rev-parse HEAD)
      export VERSION
      echo "Build ID: ${VERSION}"

      cd "${CI_PROJECT_DIR}"/ic-os/setupos

      mkdir -p guestos/disk-img
      curl "http://download.proxy-global.dfinity.network:8080/ic/${VERSION}/guest-os/disk-img/disk-img.tar.gz" \
        -o guestos/disk-img/disk-img.tar.gz --retry 10 --retry-connrefused --retry-delay 10 --retry-max-time 500
      mkdir -p hostos/disk-img
      curl "http://download.proxy-global.dfinity.network:8080/ic/${VERSION}/host-os/disk-img/disk-img.tar.gz" \
        -o hostos/disk-img/disk-img.tar.gz --retry 10 --retry-connrefused --retry-delay 10 --retry-max-time 500

      buildevents cmd "${ROOT_PIPELINE_ID}" "${CI_JOB_ID}" build-host-img -- \
      "${CI_PROJECT_DIR}"/gitlab-ci/src/job_scripts/lib/setup-os-diskimg.sh \
        "$BUILD_OUT" "$BUILD_TMP" "$UPLOAD_TARGET" "$VERSION"

      buildevents cmd "$ROOT_PIPELINE_ID" "$CI_JOB_ID" rclone -- \
      "${CI_PROJECT_DIR}"/gitlab-ci/src/artifacts/rclone_upload.py --version="${VERSION}" "$BUILD_OUT" "$UPLOAD_TARGET"

setup-os-diskimg-determinism:
  extends:
    - setup-os-diskimg
  variables:
      BUILD_EXTRA_ARGS: ""
      BUILD_EXTRA_SUFFIX: "-determinism"
      POLLUTE_PERMISSIONS: "true"
