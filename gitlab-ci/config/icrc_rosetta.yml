icrc-rosetta-api-docker-image:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"
      when: manual
      allow_failure: true
  needs:
    - job: bazel-test-all
      artifacts: false
  script:
    - |
      set -exuo pipefail

      pip3 install --ignore-installed -r requirements.txt

      "${CI_PROJECT_DIR}"/gitlab-ci/src/artifacts/rclone_download.py --git-rev "$CI_COMMIT_SHA" \
        --remote-path=release --out="artifacts/release"

      gunzip artifacts/release/ic-icrc-rosetta-api.gz
      chmod +x artifacts/release/ic-icrc-rosetta-api

      pushd "$(mktemp -d)"
      cp \
        "$CI_PROJECT_DIR"/artifacts/release/ic-icrc-rosetta-api \
        .
      bazel build //rs/rosetta-api/icrc1/rosetta:ic_icrc_rosetta_image
      popd

      docker run --rm bazel/rs/rosetta-api/icrc1/rosetta:ic_icrc_rosetta_image --help

      ICRC_ROSETTA_API_DATE=$(date +"%Y%m%d")
      ICRC_ROSETTA_API_VERSION=$(grep -e '^version' "$CI_PROJECT_DIR"/rs/rosetta-api/icrc1/rosetta/Cargo.toml | sed -e 's|^version[ ]*=[ ]*"\([^"]*\)"|\1|g')

      docker tag dfinity/icrc-rosetta-api:"$CI_COMMIT_SHA" dfinity/icrc-rosetta-api:v"$ICRC_ROSETTA_API_VERSION"
      docker tag dfinity/icrc-rosetta-api:"$CI_COMMIT_SHA" dfinity/icrc-rosetta-api:latest

      docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"
      docker push dfinity/icrc-rosetta-api:v"$ICRC_ROSETTA_API_VERSION"
      docker push dfinity/icrc-rosetta-api:latest

rosetta-icrc-release:
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true" && $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "rosetta-icrc-release"
  script:
    - |
      set -euo pipefail

      docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"
      docker-bin login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"

      # - Query the current rosetta version
      bazel build //rs/rosetta-api/icrc1/rosetta:version
      readonly ICRC_ROSETTA_RELEASE_VERSION="$(cat "$(bazel cquery --output=files //rs/rosetta-api/icrc1/rosetta:version)")"
      readonly VERSION_TAG="v$ICRC_ROSETTA_RELEASE_VERSION"

      # - Abort the release if the image with that version was already published.
      if docker manifest inspect "docker.io/dfinity/icrc-rosetta-api:$VERSION_TAG"; then
          echo Rosetta version "$ICRC_ROSETTA_RELEASE_VERSION" is already published on DockerHub
          exit 0
      fi

      # - Build an publish the image
      ICRC_ROSETTA_API_DATE=$(date +"%Y%m%d")

      for tag in "$VERSION_TAG" "$CI_COMMIT_SHA" "$ICRC_ROSETTA_API_DATE" latest; do
          bazel run --stamp --embed_label="$tag" //rs/rosetta-api/icrc1/rosetta:push_ic_icrc_rosetta_image
      done

      # - Tag the commit
      git remote add origin "https://gitlab-ci-token:${GITLAB_API_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git" || true
      git remote set-url origin "https://gitlab-ci-token:${GITLAB_API_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git" || true

      git config --global user.email "infra+gitlab-automation@dfinity.org"
      git config --global user.name "IDX GitLab Automation"

      git tag "rosetta-icrc-release-$ICRC_ROSETTA_RELEASE_VERSION" "$CI_COMMIT_SHA"
      git push origin "rosetta-icrc-release-$ICRC_ROSETTA_RELEASE_VERSION"
