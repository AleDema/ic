no-interrupt:
  extends:
    - .ubuntu-cargo-k8s
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  interruptible: False
  script:
    - echo "This pipeline is not interruptible"

cargo-audit:
  extends:
    - .ubuntu-cargo-k8s
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "cargo-audit"'
  script:
    - cd rs; cargo audit

boundary-node-service-worker:
  extends:
    - .ubuntu-cargo-k8s
  needs: []
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "merge_train"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^rc--/'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG =~ /^service-worker_v([0-9\.]+)$/'
    - if: '$CI_PARENT_PIPELINE_SOURCE == "trigger"'
  stage: test
  script:
    - |
      set -eExuo pipefail
      # shellcheck disable=SC1090
      source "$NVM_DIR/nvm.sh"
      nvm use 18
      node --version
      npm --version

      (
        cd typescript/service-worker
        npm ci
        npm run lint
        npm run format:check
        npm test
        npm run build
        npm run build-dev
        npm pack
        mkdir artifacts
        mv dfinity-service-worker-*.tgz artifacts
        cd artifacts
        sha256sum dfinity-service-worker-*.tgz > SHA256SUMS
      )

      ROOT_PIPELINE_ID=${PARENT_PIPELINE_ID:-$CI_PIPELINE_ID}
      GIT_REVISION=$("$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/find-build-id.sh)
      buildevents cmd "${ROOT_PIPELINE_ID}" "${CI_JOB_ID}" rclone -- \
        gitlab-ci/src/artifacts/rclone_upload.py --version="${GIT_REVISION}" "typescript/service-worker/artifacts" service-worker
  artifacts:
    reports:
      junit: typescript/service-worker/junit.xml
    paths:
      - typescript/service-worker/artifacts

.after-script-test:
  extends:
    - .bazel-build-k8s
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - gitlab-ci/src/after_script/**/*
        - gitlab-ci/config/**/*
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE == "merge_train"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~ /\bhotfix\b/i'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^rc--/'
  needs: []  # don't wait on other jobs
  tags:
    - dfinity-ic # we do not want the zh tag
  script:
    - |
      set -eExuo pipefail

      cd "${CI_PROJECT_DIR}"

      shellcheck -x gitlab-ci/src/after_script/*.sh

      buildevents cmd "$CI_PIPELINE_ID" "$CI_JOB_ID" "$CI_JOB_NAME" -- "${CI_PROJECT_DIR}"/gitlab-ci/src/after_script/after_script.sh

after-script-test-ic-build-legacy-image:
  extends:
    - .after-script-test
    - .ic-build-legacy-image

after-script-test-ic-build-image:
  extends:
    - .after-script-test

bazel-build-fuzzers:
  extends:
    - .bazel-test-all
  variables:
    BAZEL_EXTRA_ARGS: "--repository_cache=/cache/bazel --keep_going --config=fuzzing"
    BAZEL_COMMAND: "build"
    BAZEL_TARGETS: "//rs/..."

bazel-build-fuzzers-weekly:
  extends:
    - .bazel-test-all
    - .ic-build-legacy-image
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "build-fuzzers-to-clusterfuzz"'
  needs: []  # don't wait on other jobs
  script:
    - |
      set -euo pipefail
      cd "${CI_PROJECT_DIR}"/bin
      gcloud auth activate-service-account --key-file "${FUZZING_GCP_SERVICE_KEY}"
      ./build-all-fuzzers.sh --zip
      cd fuzzer_build
      gsutil -m cp libfuzzer_linux_*.zip gs://ic_fuzzer_builds

bazel-build-fuzzers-archives:
  extends:
    - .bazel-test-all
    - .ic-build-legacy-image
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - gitlab-ci/config/20--test--bazel-fuzzers.yml
        - bin/build-all-fuzzers.sh
        - bazel/fuzz_testing.bzl
  needs: []  # don't wait on other jobs
  script:
    - |
      set -euo pipefail
      cd "${CI_PROJECT_DIR}"/bin
      ./build-all-fuzzers.sh --zip
