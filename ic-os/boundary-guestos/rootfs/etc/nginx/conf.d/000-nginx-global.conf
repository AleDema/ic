ssl_certificate /etc/nginx/certs/fullchain.pem;
ssl_certificate_key /etc/nginx/keys/privkey.pem;
ssl_trusted_certificate /etc/nginx/certs/chain.pem;

################### Predefined DHE params from RFC 7919 https://github.com/internetstandards/dhe_groups/blob/master/ffdhe4096.pem
ssl_dhparam /etc/nginx/ffdhe4096.pem;

ssl_session_timeout  10m;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off; # Requires nginx >= 1.5.9

ssl_ecdh_curve secp521r1:secp384r1;

#################### ssllabs.com Cipher Strength - see https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations

ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

ssl_buffer_size 4k;

# OCSP stapling
ssl_stapling on;
ssl_stapling_verify on;
resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s; # Cloudflare
resolver_timeout 5s;

# Set HSTS to 365 days
add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload' always;

ssl_protocols TLSv1.3;

map_hash_bucket_size 128;

http2_max_concurrent_streams 256;

js_import ic_router.js;
js_set $route ic_router.route;
js_set $random_node_id ic_router.randomNode;
js_set $host_canister_id ic_router.hostCanisterId;
js_set $inferred_canister_id ic_router.inferCanisterId;

map $route $node_id {
  "~^(?<n>[^,]*),.*" $n;
}

map $route $subnet_id {
  "~^[^,]*,(?<s>.*)" $s;
}

map $inferred_canister_id $denylisted {
  include denylist.map; # lines of the format `ryjl3-tyaaa-aaaaa-aaaba-cai 1;`
}

geo $rosetta {
  default 0;     # all other traffic maps to zone 0
  10.0.0.0/8 1;  # local and rosetta traffic map to zone 1

  # Add rosetta node addresses here and map to zone 1
  2a00:fb01:400::/56 1;
  2607:fb58:9005::/48 1;
}

map $subnet_id $nns {
  default "";
  qahwp-36t4m-fjumt-a6uqb-mejzn-xuwvi-swwk5-35xmw-koagu-idvtz-sqe $rosetta;
}

map nop $icx_proxy {
  default "127.0.0.1:9500";
}

add_header X-Frame-Options "DENY" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;

# for call/update requests
limit_req_zone $nns zone=nns_zone:1m rate=10r/s;
limit_req_zone $subnet_id zone=subnet_zone:1m rate=300r/s;

# for read request
limit_req_zone $nns zone=nns_read_zone:1m rate=100r/s;
limit_req_zone $subnet_id zone=subnet_read_zone:1m rate=500r/s;

limit_req_zone $binary_remote_addr zone=http_remote_addr_zone:1m rate=100r/s;
limit_req_zone $rosetta zone=http_zone:1m rate=10000r/s;

root /var/www/html;

# Any direct HTTPS access without correct domain name will default to returning a 404.
server {
  listen       443 ssl http2;
  listen       [::]:443 ssl http2 ipv6only=on; # setting ipv6only=on once turns it on for all instances on that port

  server_name  _;

  return 404;
}

# Any direct HTTP traffic will be redirected to HTTPS via 301.
server {
  listen       80;
  listen       [::]:80 ipv6only=on; # setting ipv6only=on once turns it on for all instances on that port

  server_name  _;

  return 301 https://$host$request_uri;
}

server {
  listen       80;
  listen       [::]:80;

  server_name  localhost 127.0.0.1;
  server_name  [::1];

  location /nginx_status {
    stub_status;
    allow 127.0.0.1; #only allow requests from localhost
    deny all;		     #deny all other hosts
  }
}
