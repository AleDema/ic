load("//toolchains/sysimage:toolchain.bzl", "fat32_image")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

package(default_visibility = ["__subpackages__"])

exports_files([
    "partitions.csv",
    "grub.cfg",
    "rootfs/docker-base.dev",
    "rootfs/extra_boot_args",
    "rootfs/docker-base.prod",
    "config/config.ini",
    "config/ssh_authorized_keys",
    "data/deployment.json.template",
    "data/nns_public_key.pem",
])

filegroup(
    name = "rootfs-files",
    srcs = glob(["rootfs/**"]),
)

pkg_tar(
    name = "config_tar",
    srcs = [
        ":config/config.ini",
        ":config/ssh_authorized_keys",
    ],
    mode = "0644",
    package_dir = "config",
)

# TODO: This can be extended for build time configuration, as needed
genrule(
    name = "deployment_json",
    srcs = [":data/deployment.json.template"],
    outs = ["deployment.json"],
    cmd = "sed -e 's/.*/&/' < $< > $@",
)

fat32_image(
    name = "partition-config.tar",
    src = "config_tar",
    label = "CONFIG",
    partition_size = "50M",
    subdir = "./config",
    target_compatible_with = [
        "@platforms//os:linux",
    ],
)

# All setup-os targets are named the same, just stay in different submodules.
# To build or run specific target:
#
# bazel run   //ic-os/setupos/envs/prod:upload_disk-img           [--s3_endpoint=<internal endpoint address>]
# bazel build //ic-os/setupos/envs/dev/...
#
# check //ic-os/defs.bzl for the full list of targets.
