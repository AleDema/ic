regexp -s boot_disk '^\(([a-z0-9]*),[a-z0-9]*\)/EFI/BOOT' $fw_path

set prefix=($boot_disk,gpt2)

if [ -s $prefix/grubenv ]; then
  load_env
fi

set root=($boot_disk,gpt5)
set linux_root=PARTUUID=7C0A626E-E5EA-E543-B5C5-300EB8304DB7

echo Booting linux...

if [ -f "${boot}/boot_args" ]; then
    echo "Loading boot args ${boot}/boot_args"
    # This is not really great -- we are directly sourcing the target
    # file while we would only want a single variable out of it.
    # I don't think there is another way.
    source "${boot}/boot_args"
    if [ -z "${BOOT_ARGS}" ]; then
        echo "Error: BOOT_ARGS is not defined in ${boot}/boot_args"
        exit 1
    fi
    echo "Boot arguments: ${BOOT_ARGS}"
    linux /vmlinuz $BOOT_ARGS
else
    # Fallback to old method if boot_args doesn't exist
    echo "Warning: boot_args not found, using fallback method"
    if [ -f "${boot}/extra_boot_args" ]; then
        echo "Loading extra boot args ${boot}/extra_boot_args"
        source "${boot}/extra_boot_args"
        echo "Extra boot arguments ${EXTRA_BOOT_ARGS}"
    fi

    linux /vmlinuz root=$linux_root console=ttyS0,115200 console=tty0 nomodeset video=1024x768 $EXTRA_BOOT_ARGS
fi

if [ -f ${boot}/initrd.img ] ; then
    echo Loading initial ram disk ${boot}/initrd.img
    initrd ${boot}/initrd.img
fi


boot
