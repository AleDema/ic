load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//rs/canister_client/sender",
    "//rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256k1",
    "//rs/crypto/tree_hash",
    "//rs/protobuf",
    "//rs/tree_deserializer",
    "//rs/types/ic00_types",
    "//rs/types/types",
    "@crate_index//:backoff",
    "@crate_index//:ed25519-dalek",
    "@crate_index//:futures-util",
    "@crate_index//:hyper",
    "@crate_index//:hyper-tls",
    "@crate_index//:itertools",
    "@crate_index//:native-tls",
    "@crate_index//:prost",
    "@crate_index//:serde",
    "@crate_index//:serde_bytes",
    "@crate_index//:serde_cbor",
    "@crate_index//:tokio",
    "@crate_index//:url",
]

MACRO_DEPENDENCIES = [
    "@crate_index//:async-trait",
]

DEV_DEPENDENCIES = [
    "//rs/test_utilities",
    "//rs/validator",
    "@crate_index//:hex",
    "@crate_index//:libsecp256k1",
    "@crate_index//:rand_chacha",
    "@crate_index//:rand_core",
    "@crate_index//:tokio-test",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {
    "//rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256k1": "ecdsa_secp256k1",
}

rust_library(
    name = "canister_client",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_name = "ic_canister_client",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.8.0",
    deps = DEPENDENCIES,
)

rust_test(
    name = "canister_client_test",
    aliases = ALIASES,
    crate = ":canister_client",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)
