syntax = "proto3";

package verification.upgrade.api;

import "attestation.proto";
import "types/v1/types.proto";

message GetDiskEncryptionKeyRequest {
  optional verification.attestation.SevAttestationPackage sev_attestation_package = 1;
}

message GetDiskEncryptionKeyResponse {
  optional bytes key = 1;
  optional verification.attestation.SevAttestationPackage sev_attestation_package = 2;
}

message GetNodeSigningKeyRequest {
  optional bytes challenge = 1;
}

message GetNodeSigningKeyResponse {
  optional types.v1.NodeId node_id = 1;
  optional bytes proof = 2;
}

message SignalStatusRequest {
  optional bool success = 1;
}

message SignalStatusResponse {
}

service DiskEncryptionKeyExchangeService {
  rpc GetDiskEncryptionKey(GetDiskEncryptionKeyRequest)
    returns (GetDiskEncryptionKeyResponse) {
  }

  rpc GetNodeSigningKey(GetNodeSigningKeyRequest) returns (GetNodeSigningKeyResponse) {
  }

  rpc SignalStatus(SignalStatusRequest) returns (SignalStatusResponse) {
  }
}
