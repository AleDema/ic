syntax = "proto3";

package onchain_observability_service.v1;

// Request for prometheus metrics data from the replica
// Note: this can be used to receive both peer data (ex. peer uptime %)
// as well as replica data (ex. replica last start time)
message OnchainObservabilityServiceGetMetricsDataRequest {
  // The metric names for which to to fetch data
  repeated string requested_metrics = 1;
}

message OnchainObservabilityServiceGetMetricsDataResponse {
    // Raw prometheus registry data, which should be parsed by the adapter. This is filtered on lines corresponding to the metrics requested
    string metrics_data = 1;
}

service OnchainObservabilityService {
    rpc GetMetricsData(OnchainObservabilityServiceGetMetricsDataRequest) returns (OnchainObservabilityServiceGetMetricsDataResponse);
}
