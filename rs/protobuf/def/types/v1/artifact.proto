syntax = "proto3";

package types.v1;

import "google/protobuf/empty.proto";
import "registry/subnet/v1/subnet.proto";
import "types/v1/ecdsa.proto";

message ArtifactAttribute {
  oneof kind {
    ConsensusMessageAttribute consensus_message = 1;
    DkgMessageAttribute dkg_message = 2;
    EcdsaMessageAttribute ecdsa_message = 3;
    CanisterHttpResponseAttribute canister_http = 4;
    google.protobuf.Empty empty = 5;
  }
}

message ConsensusMessageAttribute {
  oneof kind {
    uint64 random_beacon = 1;
    FinalizationAttribute finalization = 2;
    NotarizationAttribute notarization = 3;
    BlockProposalAttribute block_proposal = 4;
    uint64 random_beacon_share = 5;
    uint64 notarization_share = 6;
    uint64 finalization_share = 7;
    uint64 random_tape = 8;
    uint64 random_tape_share = 9;
    uint64 cup = 10;
    uint64 cup_share = 11;
  }
}

message FinalizationAttribute {
  bytes block_hash = 1;
  uint64 height = 2;
}

message NotarizationAttribute {
  bytes block_hash = 1;
  uint64 height = 2;
}

message BlockProposalAttribute {
  uint64 rank = 1;
  uint64 height = 2;
}

message DkgMessageAttribute {
  uint64 height = 1;
}

message EcdsaMessageAttribute {
  oneof kind {
    registry.subnet.v1.IDkgTranscriptId signed_dealing = 1;
    registry.subnet.v1.IDkgTranscriptId dealing_support = 2;
    types.v1.RequestId sig_share = 3;
    registry.subnet.v1.IDkgTranscriptId complaint = 4;
    registry.subnet.v1.IDkgTranscriptId opening = 5;
  }
}

message CanisterHttpResponseAttribute {
  uint64 registry_version = 1;
  uint64 id = 2;
  bytes hash = 3; // cryptographic hash of [`CanisterHttpResponse`]
}
