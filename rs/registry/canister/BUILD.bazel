load("@rules_rust//rust:defs.bzl", "rust_library")
load("@rules_rust//cargo:cargo_build_script.bzl", "cargo_build_script")
load("//bazel:prost.bzl", "generated_files_check")
load("//bazel:canisters.bzl", "optimized_canister", "rust_canister")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "protos",
    srcs = glob(["proto/**"]),
)

DEPENDENCIES = [
    "//rs/crypto/node_key_validation",
    "//rs/crypto/sha",
    "//rs/crypto/utils/basic_sig",
    "//rs/nervous_system/common",
    "//rs/nervous_system/common/test_keys",
    "//rs/nns/cmc",
    "//rs/nns/common",
    "//rs/nns/constants",
    "//rs/protobuf",
    "//rs/registry/keys",
    "//rs/registry/routing_table",
    "//rs/registry/subnet_features",
    "//rs/registry/subnet_type",
    "//rs/registry/transport",
    "//rs/rust_canisters/dfn_candid",
    "//rs/rust_canisters/dfn_core",
    "//rs/rust_canisters/on_wire",
    "//rs/types/base_types",
    "//rs/types/ic00_types",
    "//rs/types/types",
    "@crate_index//:build-info",
    "@crate_index//:candid",
    "@crate_index//:futures",
    "@crate_index//:ic-certified-map",
    "@crate_index//:ipnet",
    "@crate_index//:leb128",
    "@crate_index//:prost",
    "@crate_index//:serde",
    "@crate_index//:serde_cbor",
    "@crate_index//:url",
]

MACRO_DEPENDENCIES = [
    "//rs/nervous_system/common/build_metadata",
]

BUILD_DEPENDENCIES = [
    "@crate_index//:build-info-build",
]

ALIASES = {}

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    aliases = ALIASES,
    data = [],  # build script data (e.g. template files) goes here
    version = "0.8.0",
    deps = BUILD_DEPENDENCIES,
)

rust_library(
    name = "canister",
    srcs = glob([
        "src/**",
        "gen/**",
    ]),
    aliases = ALIASES,
    crate_name = "registry_canister",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.8.0",
    deps = DEPENDENCIES + [":build_script"],
)

rust_canister(
    name = "registry-canister-raw",
    srcs = ["canister/canister.rs"],
    aliases = ALIASES,
    compile_data = ["canister/registry.did"],
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":canister"] + [":build_script"],
)

optimized_canister(
    name = "registry-canister",
    wasm = ":registry-canister-raw",
)

generated_files_check(
    name = "check_generated_files",
    srcs = ["tests/check_generated_files.rs"],
    data = [
        ":protos",
        "//rs/types/base_types:protos",
        "//rs/registry/transport:protos",
        "//rs/protobuf:protos",
        "//rs/nns/common:protos",
    ] + glob(["gen/**"]),
    manifest_dir = "rs/registry/canister",
    deps = [
        "//rs/registry/canister/protobuf_generator:lib",
        "//rs/test_utilities/compare_dirs",
        "@crate_index//:tempfile",
    ],
)
